module util

imports
  libstratego-lib
  ../lib/editor-common.generated
 
rules

  collect-markers(s) =
    collect-all(s,conc);
    try(flatten-list);
    map((id,try(concat-strings)))
      
  require(s)=not(s)
  constraint-warning=fail
  constraint-note=fail
  check=fail

  // Simplified applications
  editor-resolve: (node, position, ast, path, project-path) -> x
    where x := <resolve-simple> node
    
  editor-hover: (node, position, ast, path, project-path) -> x
    where x := <hover-simple> node
  
  desugar-compat = try(simplify-application-constructor <+ simplify-module-constructor)

  editor-resolve =
          ?(node, pos, ast, path, project-path)
        ; pos2 := <desugar-position(desugar-compat | ast)> pos
        ; ast2 := <DecoratedAst>
        ; node2 := <term-at-position(|pos2)> ast2
        ; <editor-resolve-decorated> (node2, pos2, ast2, path, project-path)
  
  editor-hover =
          ?(node, pos, ast, path, project-path)
        ; pos2 := <desugar-position(desugar-compat | ast)> pos
        ; ast2 := <DecoratedAst>
        ; node2 := <term-at-position(|pos2)> ast2
        ; <editor-hover-decorated> (node2, pos2, ast2, path, project-path)
          
  editor-hover-decorated: (node, position, ast, path, project-path) -> x
    where x := <hover-simple-decorated> node
  
  editor-resolve-decorated: (node, position, ast, path, project-path) -> x
    where x := <resolve-simple-decorated> node
  
  // Documentation Presentation
  make-list = ?list; <flatten-list; concat-strings> ["<ul>",<map(make-item)> list,"</ul>"]
  make-item = ?str; <concat-strings> ["<li>",str,"</li>"]
  
  // AST mapping
  preserve(s) =
      ensure-ast(|"in preserve")
    ; ![<id>]; all(s); Hd
    ; ensure-ast(|"after preserve")
  
  ensure-ast(|msg) = 
    ?[_]  // lists don't always have an ast association
    <+ where(not(has-ast-mapping))
         ; debug(<concat-strings> ["No AST mapping while ",msg,": "]); print-stacktrace
    <+ id

  //has-ast-mapping = prim("SSL_EXT_ast_mapping")
  has-ast-mapping = id

  check-ast(|msg) = 
    alltd((?Module(_,_) <+ ?ModuleDefs(_,_,_)); ensure-ast(|msg))
  
  