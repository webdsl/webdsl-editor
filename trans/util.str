module util

imports
  libstratego-lib
  lib/editor-common.generated
  libwebdsl-generator
  libwebdsl-front
 
rules

  collect-markers(s) =
    collect-all(s,conc);
    try(flatten-list);
    map((id,try(concat-strings)))
      
  require(s)=not(s)
  constraint-warning=fail
  constraint-note=fail
  check=fail

signature constructors
  
  FromEntity : Term -> Term

rules

  // Re-use compiler normalization
  desugar-def = normalize-declare; try(desugar-def)

  // Desugar, but remain compatible with compiler typechecker
  desugar-compat = try(preserve(simplify-application-constructor <+ simplify-module-constructor))

  // Documentation Presentation
  make-list = ?list; <flatten-list; concat-strings> ["<ul>",<map(make-item)> list,"</ul>"]
  make-item = ?str; <concat-strings> ["<li>",str,"</li>"]
  
  // AST mapping
  preserve(s) = where(not(has-ast-mapping)); s
  preserve(s) =
      ensure-ast(|"in preserve")
   // ; try(where(origin-term; debug(!"Origin is: ")))
    ; origin-track-forced(s)
   // ; try(where(origin-term; debug(!"Origin is: ")))
    ; ensure-ast(|"after preserve")
  
  ensure-ast(|msg) = 
       is-list  // lists don't always have an ast association
    <+ where(not(has-ast-mapping); debug(<concat-strings> ["No AST mapping while ",msg,": "]); print-stacktrace)
    <+ id

  has-ast-mapping = where(origin-term)
  //has-ast-mapping = id

  check-ast(|msg) = 
    alltd((?Module(_,_) <+ ?ModuleDefs(_,_,_)); ensure-ast(|msg))
  
  // Apply s along the AST, starting at the root and ending at the given position and return first succeeded application
  walk-ast(s | pos) = s 
  walk-ast(s | pos) =
      where([x|xs] := pos)
    ; subterm-at(|x)
    ; walk-ast(s | xs)

  // Dummies
  strip-bodies = fail
  
  editor-timestamp = import-term(include/editor.timestamp.aterm)
  
  // TODO: move to editor-common.generated
  queue-analysis = 
  	   (is-list; list-loop(queue-analysis))
  	<+ prim("SSL_EXT_queue_analysis")
  	
  set-total-work-units = prim("SSL_EXT_set_total_work_units")
  complete-work-unit = prim("SSL_EXT_complete_work_unit")
  queue-strategy(|s) = prim("SSL_EXT_queue_strategy", s)
  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)