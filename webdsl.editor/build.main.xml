<?xml version="1.0" encoding="UTF-8"?>
<project name="WebDSL" default="all">

  <!-- Key input modules -->
  <property name="sdfmodule" value="WebDSL" />
  <property name="esvmodule" value="WebDSL" />
  <!-- prevent clash with webdsl.jar (the compiler) -->
  <property name="strmodule" value="webdsl_editor" />

  <!-- Project directories -->
  <property name="trans" location="trans" />
  <property name="src-gen" location="editor/java-generated" />
  <property name="syntax" location="syntax" />
  <property name="include" location="include" />
  <property name="lib" location="lib" />
  <property name="build" location="bin" />
  <property name="dist" location="bin/dist" />
  <property name="java-runtime" location="java-runtime/src" />

  <!-- migration guide: https://github.com/metaborg/doc/blob/master/releases/spoofax/SDF3%20Migration%20Guide%20-%20Nightly.md -->
  <property name="ppmodule" value="WebDSL-pp"/>
  <property name="sigmodule" value="WebDSL-sig"/>
  <property name="sdf-src-gen" location="src-gen"/>
  <property name="pp" location="${sdf-src-gen}/pp"/>
  <property name="signatures" location="${sdf-src-gen}/signatures"/>
  <property name="lib-gen" location="${include}"/>
  <property name="syntax.rel" location="${syntax}" relative="yes"/>
  <property name="trans.rel" location="trans" relative="yes"/>
  <property name="include.rel" location="${include}" relative="yes"/>
  <property name="lib-gen.rel" location="${lib-gen}" relative="yes"/>
  <property name="syntax" location="${sdf-src-gen}/syntax"/>
  <property name="nativepath" value="${eclipse.spoofaximp.nativeprefix}"/>

  <!-- WEBDSL: import compiler properties -->
  <loadproperties srcFile="import.webdsl.properties" />
  <fail message="ERROR: externaljarflags is no longer user-configurable. Please remove it from import.webdsl.properties">
    <condition>
    <and><isset property="externaljarflags" /><not><isset property="externaljarflags.set" /></not></and>
    </condition>
  </fail>
  <property name="externaljarflags" value="-la org.webdsl.webdsl_generator -la org.webdsl.webdsl_front" />
  <property name="externaljarflags.set" value="true" />

  <!-- WEBDSL: for spoofax.output.type (ctree/jar) -->
  <loadproperties srcFile="build.properties" />

  <!-- Imports -->
  <property name="build.sdf.imports" value="" />

  <!-- WEBDSL: added ${webdsl.home} -->
  <property name="build.stratego.args"
    value="--library
                        -I &quot;${trans}&quot; -I &quot;${basedir}&quot; -I &quot;${include}&quot; -I &quot;${lib}&quot;
                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -la stratego-parallel
                        -I ${webdsl.home}" />

  <import file="dr-analysis/build.xml" />

  <import file="build.generated.xml" />
  <import file="build.clean.xml" />

  <!-- WEBDSL: custom main target, don't use spoofaximp.default -->
  <target name="all" depends="check.editor-ts.present, all.release" />
  <target name="all.release" depends="
  	generate-WebDSL-Builders.esv,
    update.editor-ts,
  	import-webdsl-template,
  	import-rtrees-for-editor-checks,
    check-classpath,
    call-onsave,
    init,
    sdf2table,
    meta-sdf2table,
  	ppgen,
    pppack,
    sdf2imp.eclipse,
    sdf2imp.standalone,
    sdf2parenthesize,
    stratego.aster,
    create-dr-term,
    stratego.jar.helper,
    compile-java-files,
    stratego.jar.makejar,
    java.jar,
    refresh,
    sdf2imp.eclipse.load"/>

  <!-- WEBDSL: Custom targets .................................................................... -->

  <target name="generate-WebDSL-Builders.esv">
    <property name="stratego.compile.target" value="stratego.${spoofax.output.type}"/>
    <!-- update builder -->
    <copy file="editor/${esvmodule}-Builders.template.esv" tofile="editor/${esvmodule}-Builders.esv" overwrite="true"/>
    <replace file="editor/${esvmodule}-Builders.esv" token="@spoofax.output.type@" value="${spoofax.output.type}" />
    <if><equals arg1="${acoda.enabled}" arg2="true"/>
      <then>
        <replace file="editor/${esvmodule}-Builders.esv" token="//acoda disabled " value="" />
      </then>
    </if>
  </target>

  <!-- import template to plugin -->
  <target name="import-webdsl-template">
    <!--
      be sure to delete files from target dir if they're removed from
      template dir
    -->
    <sync todir="webdsl-template" includeEmptyDirs="true">
      <fileset dir="${webdsl.projectdir}">
        <exclude name="*.in" />
        <exclude name="*.am" />
        <exclude name="**/.servletapp/**" />
        <exclude name="**/.webdsl-parsecache/**" />
        <exclude name="**/.webdsl-fragment-cache/**" />
        <exclude name="**/plugin-build-deps/**" />
      </fileset>
    </sync>

    <unzip overwrite="false" src="webdsl-template/template-java-servlet/tomcat/tomcat.zip" dest="webdsl-template/tomcat/"/>
    <!-- untar task used previously created ._filename copies, even in lib/, which tomcat will then compain about when starting up -->

    <move overwrite="true" file="webdsl-template/webdsl-eclipseplugin" tofile="webdsl-template/webdsl"/>
    <move overwrite="true" file="webdsl-template/webdsl-eclipseplugin.bat" tofile="webdsl-template/webdsl.bat"/>

  </target>

  <!--  copy rtrees of webdsl for stratego editor -->
  <target name="import-rtrees-for-editor-checks">
    <copy file="${webdsl.home}/libback-end-transformations.rtree"
      preservelastmodified="true" todir="lib" />
    <copy file="${webdsl.home}/libjava-transformations.rtree"
      preservelastmodified="true" todir="lib" />
    <copy file="${webdsl.home}/libto-java-servlet.rtree"
      preservelastmodified="true" todir="lib" />
    <copy file="${webdsl.home}/libwebdsl-front.rtree"
      preservelastmodified="true" todir="lib" />
    <copy file="${webdsl.home}/libwebdsl-generator.rtree"
      preservelastmodified="true" todir="lib" />
    <copy file="${webdsl.home}/libwrite-files.rtree"
      preservelastmodified="true" todir="lib" />
    <if><equals arg1="${acoda.enabled}" arg2="true"/>
      <then>
        <copy file="${acoda.home}/bin/org/acoda/editor/editor.rtree"
          preservelastmodified="true" todir="lib" />
        <copy file="${acoda.home}/bin/dist/acoda.jar"
          preservelastmodified="true" todir="include" />  <!-- FIXME: I am putting a jar import here, which is ugly and temporary. Spoofax currently supports a single external jar, we need two. I posted a feature reqeust on YellowGrass. -->
      </then>
    </if>
  </target>

  <property name="path.timestamp.term" value="${include}/editor.timestamp.aterm" />

  <target name="check.editor-ts.present">
    <available file="${path.timestamp.term}" property="available.editor-ts" />
  </target>

  <target name="declare-get-unix-ts" >
     <taskdef name="taskget-unix-ts"  classname="org.webdsl.ant.TaskGetUnixTs" classpath="lib/webdsl-editor-antTasks.jar"/>
  </target>
  <target name="update.editor-ts" unless="available.editor-ts" depends="declare-get-unix-ts">
    <taskget-unix-ts/>
    <echo>Editor timestamp is: ${timestamp.unix}</echo>
    <echo file="${path.timestamp.term}">${timestamp.unix}</echo>
    <!-- force strj to run -->
    <touch file="${trans}/${strmodule}.str" />
  </target>

</project>

