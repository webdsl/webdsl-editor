module webservices-generation/util

imports   	
	libwebdsl-generator
	lib/-

rules
  get-subclasses-of-entity: entity -> children
  	where directChildren := <bagof-SubClass> entity
  		  ; subchildren := <map(get-subclasses-of-entity); flatten-list> directChildren
  		  ; children := <concat> [directChildren, subchildren]
  		    
  get-superclasses-of-entity: entity -> parents
  	where not ("Entity" := <Extends> entity)   
  	where directparent := <Extends> entity
  		  ; superparents := <get-superclasses-of-entity> directparent
  		  ; parents := [ directparent | superparents]	
 			
   get-superclasses-of-entity: entity -> ["Entity"]
  	where "Entity" := <Extends> entity    
  	
  get-superclasses-of-entity: entity -> []
  	where not( <Extends> entity)    
  	
  generate-dr-for-highest-parent: e@EntityNoSuper(name, props) -> e
   	where rules(
   		get-highest-parent : name -> name
   	)
  
  generate-dr-for-highest-parent: e@Entity(name, super, props) -> e
   	where parent := <find-highest-parent> name
   		; rules(
   			get-highest-parent : name -> parent
   		)
  
  find-highest-parent: name -> parent
  	where parent := <Extends; find-highest-parent> name 	
  
  find-highest-parent: name -> name
  	where "Entity" := <Extends> name  	
  	
