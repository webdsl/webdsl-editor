module typecheck/declare

imports
    libwebdsl-front
    libwebdsl-generator
    caching
    
rules // global declares
  
  declare-global = 
      is-global-decl
    ; where(store-def; store-def-to-mod-desugar)
    ; try(declare)        // Imports(_) has no declare but needs to be stored
      
  is-global-decl =
      ?Enum(_,_)
    <+?AccessControlPrincipal(_,_)    // for securityContext
    <+?Predicate(_,_,_)
    <+?Derive(_,_,_)                  // declares page names 
    <+?DeriveCrud(_)
    <+?Imports(_)
    <+?RequestScope(_)
    
rules // template with subelements (placeholders)

  declare-global =
      ?Define(_,_,_,_,body)
    ; where(store-def; store-def-to-mod-desugar)
    ; declare
    ; <map(store-def-to-mod-desugar)> body		// body is a list of stripped elements

rules // global declares with subelements

  declare-global = 
      where(get-entity-def => (name,body))
    ; declare
    ; where(<map(store-def-to-mod-desugar(|name))> body)
    ; store-def
    ; store-def-to-mod-desugar
    
  declare-global =
      ?ExtendEntity(ent, body)
    ; declare
    ; where(<map(store-def-to-mod-desugar(|ent))> body)
    ; store-def; store-def-to-mod-desugar
      
  declare-global =
      ?TypeDef(type,body)
    ; declare
    ; where(<map(try(?NativeClassFunctionFromStatic(_,<id>)); store-def-to-mod-desugar(|type))> body)
    ; store-def; store-def-to-mod-desugar
      
  declare-global =
      ?NativeClass(class,as,super,elems)
    ; declare
    ; store-def
    ; NativeClass(_,_,_,newelems) := <store-def-to-mod-desugar>
    ; where(<?NativeClassAlias(realname)> as <+ realname := as)
      // functions
    ; where(<map(store-def-to-mod-desugar(|realname))> newelems)
      // constructors
    ; where(<filter(?Function(_,_,_,_); store-def-to-mod-desugar)> newelems)
      
rules // only global if defined on top level
  
  declare-global =
      ?GlobalsDefinition(elems)
    ; <filter(try(declare-global-toplevel))> elems
  
  declare-global =
      (?Section(_,elems) <+ ?AccessControlDefinition(_,elems))
    ; <filter(try(declare-global-toplevel))> elems
    ; fail // allow further traversal (like imports)
  
  is-global-toplevel =
     ?VarDeclInit(_,_,_)
   <+?VarDeclInitInferred(_,_)
   <+?Function(_,_,_,_)
   <+?FunctionNoReturn(_,_,_)
    
  declare-global-toplevel =
      is-global-toplevel
    ; where(store-def; store-def-to-mod-desugar)
    ; declare
    