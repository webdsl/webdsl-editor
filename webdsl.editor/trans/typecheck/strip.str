module typecheck/strip

imports
    libwebdsl-front
    util
    
rules

  // Need to store the non-desugared definitions for typechecking
  // So strip-bodies needs to work on all variants
  
  strip-bodies: EntityNoSuper(name,body) -> EntityNoSuper(name,<strip-ent-body> body)
  strip-bodies: Entity(name,super,body) -> Entity(name,super,<strip-ent-body> body)
  strip-bodies: SessionEntity(name,body) -> SessionEntity(name,<strip-ent-body> body)
  strip-bodies: ExtendEntity(class,body) -> ExtendEntity(class,<strip-ent-body> body)
  strip-bodies: ExtendSessionEntity(class,body) -> ExtendSessionEntity(class,<strip-ent-body> body)
  
  strip-bodies: DerivedProperty(x,type,sort,annos,e) -> DerivedProperty(x,type,sort,annos,None())
  strip-bodies: DerivedPropertyNoAnno(x,type,sort,e) -> DerivedPropertyNoAnno(x,type,sort,None())
  
  strip-bodies: Function(name,args,ret,_) -> Function(name,args,ret,None())
  strip-bodies: FunctionNoReturn(name,args,_) -> FunctionNoReturn(name,args,None())
  
  strip-bodies: Predicate(name,args,_) -> Predicate(name,args,None())
  
  strip-bodies: VarDeclInit(x, srt, _) -> VarDeclInit(x, srt, None())
  // need expression for typechecker
  //strip-bodies: VarDeclInitInferred(x, _) -> VarDeclInitInferred(x, None())
  
  strip-bodies: Define(mod*, name, args, targs, body) -> Define(mod*, name, args, targs, <strip-template-body> body)
  
rules // entities
  
  strip-ent-body = map(try(strip-ent-decl))
  
  strip-ent-decl = strip-bodies // re-use function stripping
  strip-ent-decl: ExtendFunction(f) -> ExtendFunction(<strip-bodies> f)
  
rules // modules

  // Using strip-bodies here would strip all definitions and declare nothing.
  strip-mod: Module(x,_) -> Module(x,None())
        
rules // template
	
	strip-template-body = collect(preserve(strip-in-template-body))

	strip-in-template-body: Placeholder(name, _) -> Placeholder(name, None())
	
	// Preserve template call, could be a container with ID which is needed to resolve ajax targets
	strip-in-template-body: TemplateCallPropsNoBody(_,_,passign*) -> TemplateCallPropsNoBody(None(),None(),passign*)
	strip-in-template-body: TemplateCallProps(_, passign*) -> TemplateCallProps(None(), passign*)
	strip-in-template-body: TemplateCallPropsNoArgs(_, passign*, _) -> TemplateCallPropsNoArgs(None(), passign*, None())
	strip-in-template-body: TemplateCall(_, _, passign*, _) -> TemplateCall(None(), None(), passign*, None())
	