module Python-Expression
imports
  Python-Lexical Python-Operators

exports
  context-free syntax
    Id                          -> Exp {cons("Var")}
    Int                         -> Exp {cons("Int")}
    Float                       -> Exp {cons("Float")}
    Exp "." Id                  -> Exp {cons("FieldAccess")}
    "(" Exp ")"                 -> Exp {bracket}
    "(" Exp "," {Exp ","}+ ")"  -> Exp {cons("TupleLiteral")}
    "(" Exp "," ")"             -> Exp {cons("TupleLiteralOne")}
    "[" {Exp ","}* "]"          -> Exp {cons("ListLiteral")}
    Exp "[" Exp "]"             -> Exp {cons("ListIndex")}
    Exp "and" Exp               -> Exp {cons("And"), assoc}
    Exp "or" Exp                -> Exp {cons("Or"), assoc}
    "not" Exp                   -> Exp {cons("Not")}
    Exp "(" {Param ","}* ")"    -> Exp {cons("Call")}
    String                      -> Exp {cons("String")}

