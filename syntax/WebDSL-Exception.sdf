module WebDSL-Exception

exports

  context-free syntax
  
    %%
    %%  Exceptions, for supporting data validation
    %%
    %%  example: 
    %%  entity ValidationException{message:String}
    %%  throw ValidationException{ message := "error" }
    %%  try{}catch(ve : ValidationException){}
    %%  throw ValidationException{ message := "error1" }, ValidationException{ message := "error2" }
    %%  try{}catch(l : List<ValidationException>)

    "throw" {Exp ","}+ ";" -> Statement {cons("ThrowStatement"), prefer}
    "throw" {Exp ","}+     -> TemplateCall {cons("ThrowTemplate"), prefer}
    
    "try" Block Catch+ -> Statement {cons("TryStatement"), prefer}
    "try" Block Catch+ -> TemplateCall {cons("TryTemplate"), prefer}
    
    "catch" "(" Id ":" Sort ")" Block -> Catch {cons("Catch")}
    
    
    