module WebDSL-Native

imports
  WebDSL-Lexical

exports

  sorts Derive DeriveType DeriveProperty

context-free syntax

  "native" "function" Id "(" {FormalArg ","}* ")" ":" Sort ";" -> NativeFunctionDeclaration {cons("NativeFunction")}

context-free syntax

  "native" "class" QId NativeClassAlias NativeClassSuper "{" NativeClassElement* "}" -> NativeClassDeclaration {cons("NativeClass")}
  
  "as" Id -> NativeClassAlias{cons("NativeClassAlias"),prefer}
  -> NativeClassAlias{cons("None")}
  
  ":" Id -> NativeClassSuper{cons("NativeClassSuper"),prefer}
  -> NativeClassSuper{cons("None")}
  
  Id ":" NativeType -> NativeClassElement{cons("NativeClassProperty")}
  
  NativeClassFunctionStatic Id "(" {NativeType ","}* ")" NativeClassFunctionReturn -> NativeClassElement{cons("NativeClassFunction")}
  "constructor" "(" {NativeType ","}* ")" NativeClassFunctionReturn -> NativeClassElement{reject}

  ":" NativeType ->  NativeClassFunctionReturn{cons("NativeClassFunctionReturn"),prefer}
  ->  NativeClassFunctionReturn{cons("None")}
  
  "static" ->  NativeClassFunctionStatic{cons("NativeClassFunctionStatic"),prefer}
  ->  NativeClassFunctionStatic{cons("None")}

  "constructor" "(" {NativeType ","}* ")" -> NativeClassElement{cons("NativeClassConstructor")}
  
  Id "<" {NativeType ","}* ">" -> NativeType{cons("NativeGenericType")}
  Id -> NativeType{cons("NativeSimpleType")}